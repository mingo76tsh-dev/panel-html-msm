name: Build & Deploy (dual) + Lighthouse

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # =========================
  # Build PROD (Pages)
  # =========================
  build-prod:
    name: Build PROD (/panel-html-msm/)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Limpieza / normalización de íconos
      - name: Clean & normalize icons
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y imagemagick -qq
          bash clean-icons.sh

      # Verificación de tamaños
      - name: Verify PWA icons, favicons & screenshots
        run: |
          check() { identify -format "%wx%h\n" "$1" | grep -qx "$2" || { echo "::error::Bad size for $1 (want $2)"; exit 1; }; }
          test -f icons/icon-192.png          && check icons/icon-192.png          192x192
          test -f icons/icon-512.png          && check icons/icon-512.png          512x512
          test -f icons/maskable-192.png      && check icons/maskable-192.png      192x192
          test -f icons/maskable-512.png      && check icons/maskable-512.png      512x512
          test -f icons/apple-touch-icon.png  && check icons/apple-touch-icon.png  180x180
          test -f icons/favicon-16.png        && check icons/favicon-16.png        16x16
          test -f icons/favicon-32.png        && check icons/favicon-32.png        32x32
          # Screenshots opcionales (si existen)
          test -f icons/screen-1080x1920.webp && check icons/screen-1080x1920.webp 1080x1920 || true
          test -f icons/screen-1920x1080.webp && check icons/screen-1920x1080.webp 1920x1080 || true

      - name: Optimize PNGs (lossless)
        uses: kirillt/oxipng-action@v1
        with:
          paths: icons
          strip: safe
          optimize: 3

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Build PROD
        run: node build.mjs --prod

      - name: Upload artifact (prod)
        uses: actions/upload-artifact@v4
        with:
          name: dist-prod
          path: dist
          if-no-files-found: error

  # =========================
  # Build DEV (scope ./)
  # =========================
  build-dev:
    name: Build DEV (./)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Build DEV
        run: node build.mjs --dev

      - name: Upload artifact (dev)
        uses: actions/upload-artifact@v4
        with:
          name: dist-dev
          path: dist
          if-no-files-found: error

  # =========================
  # Lighthouse (compara DEV vs PROD)
  # =========================
  lighthouse:
    name: Lighthouse CI (dev & prod)
    needs: [build-prod, build-dev]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: _artifacts

      - name: Tree
        run: find _artifacts -maxdepth 2 -type f -print

      - name: Install static server
        run: npm i -g http-server

      - name: Start servers (dev:4173 / prod:5173)
        run: |
          nohup http-server "_artifacts/dist-dev"  -p 4173 -s >/dev/null 2>&1 &
          nohup http-server "_artifacts/dist-prod" -p 5173 -s >/dev/null 2>&1 &
          sleep 2
          echo "DEV:  http://localhost:4173/"
          echo "PROD: http://localhost:5173/"

      - name: Lighthouse (DEV)
        id: lhci_dev
        uses: treosh/lighthouse-ci-action@v11
        with:
          configPath: .lighthouserc.json
          uploadArtifacts: true
          temporaryPublicStorage: true
          urls: |
            http://localhost:4173/
            http://localhost:4173/#ing
            http://localhost:4173/#alta

      - name: Lighthouse (PROD)
        id: lhci_prod
        uses: treosh/lighthouse-ci-action@v11
        with:
          configPath: .lighthouserc.json
          uploadArtifacts: true
          temporaryPublicStorage: true
          urls: |
            http://localhost:5173/panel-html-msm/
            http://localhost:5173/panel-html-msm/#ing
            http://localhost:5173/panel-html-msm/#alta

      - name: Publicar artefactos Lighthouse
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: ".lighthouseci"

      - name: Resumen (DEV vs PROD)
        if: always()
        run: |
          echo "## Lighthouse DEV vs PROD" >> $GITHUB_STEP_SUMMARY
          echo "### DEV"  >> $GITHUB_STEP_SUMMARY
          echo "- Performance:   ${{ steps.lhci_dev.outputs.performance }}"       >> $GITHUB_STEP_SUMMARY
          echo "- Accessibility: ${{ steps.lhci_dev.outputs.accessibility }}"     >> $GITHUB_STEP_SUMMARY
          echo "- BestPractices: ${{ steps.lhci_dev.outputs.bestPractices }}"     >> $GITHUB_STEP_SUMMARY
          echo "- SEO:           ${{ steps.lhci_dev.outputs.seo }}"               >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### PROD"  >> $GITHUB_STEP_SUMMARY
          echo "- Performance:   ${{ steps.lhci_prod.outputs.performance }}"      >> $GITHUB_STEP_SUMMARY
          echo "- Accessibility: ${{ steps.lhci_prod.outputs.accessibility }}"    >> $GITHUB_STEP_SUMMARY
          echo "- BestPractices: ${{ steps.lhci_prod.outputs.bestPractices }}"    >> $GITHUB_STEP_SUMMARY
          echo "- SEO:           ${{ steps.lhci_prod.outputs.seo }}"              >> $GITHUB_STEP_SUMMARY

  # =========================
  # Deploy (solo PROD)
  # =========================
  deploy:
    name: Deploy to GitHub Pages (PROD)
    needs: [build-prod, lighthouse]
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download dist-prod
        uses: actions/download-artifact@v4
        with:
          name: dist-prod
          path: dist

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
